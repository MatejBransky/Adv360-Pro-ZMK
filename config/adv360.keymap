#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL       &kp N1           &kp N2     &kp N3        &kp N4        &kp N5  &tog 1                                                                                   &mo 3                     &kp N6  &kp N7        &kp N8        &kp N9     &kp N0          &kp SQT
&kp TAB         &kp Q            &kp W      &kp E         &kp R         &kp T   &kp LA(LC(LEFT_GUI))                                                                     &kp LA(LC(LEFT_GUI))      &kp Y   &kp U         &kp I         &kp O      &kp P           &kp BSLH
&lt 5 ESCAPE    &kp A            &kp S      &kp D         &kp F         &kp G   &kp LS(LC(LA(LEFT_GUI)))  &kp CAPSLOCK   &kp SPACE              &kp C_PP    &lt 4 SPACE  &kp LS(LA(LC(LEFT_GUI)))  &kp H   &kp J         &kp K         &kp L      &kp SEMI        &kp SPACE
&kp LSHFT       &kp Z            &kp X      &kp C         &kp V         &kp B                                            &kp C_VOLUME_UP        &kp C_NEXT                                         &kp N   &kp M         &kp COMMA     &kp DOT    &kp FSLH        &kp RSHFT
&kp LEFT_ARROW  &kp RIGHT_ARROW  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI          &mo 4                     &kp BACKSPACE  &kp C_VOLUME_DOWN      &kp C_PREV  &lt 4 ENTER  &lt 4 SPACE                       &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp DOWN_ARROW  &kp UP_ARROW
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_symbols {
            bindings = <
&kp F11    &kp F1           &kp F2           &kp F3           &kp F4           &kp F5           &trans                                         &trans  &kp F6            &kp F7             &kp F8           &kp F9                &kp F10                &kp F12
&kp PLUS   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &trans                                         &trans  &kp KP_NUMBER_6   &kp KP_NUMBER_7    &kp KP_NUMBER_8  &kp KP_NUMBER_9       &kp KP_NUMBER_0        &kp UNDERSCORE
&kp EQUAL  &kp EXCLAMATION  &kp AT_SIGN      &kp HASH         &kp DOLLAR       &kp PERCENT      &trans  &trans  &trans      &trans  &trans     &trans  &kp CARET         &kp AMPERSAND      &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&trans     &kp GRAVE        &kp TILDE        &kp LEFT_BRACE   &kp RIGHT_BRACE  &trans                           &trans      &trans                     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LESS_THAN    &kp GREATER_THAN      &kp QUESTION           &trans
&trans     &trans           &trans           &trans           &trans                            &trans  &trans  &trans      &trans  &kp SPACE  &trans                    &trans             &trans           &trans                &trans                 &trans
            >;
        };

        layer_nav {
            bindings = <
&trans     &trans         &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans              &trans              &trans            &trans               &trans  &trans
&trans     &trans         &trans  &trans  &trans  &trans  &trans                                                    &trans  &kp LA(LEFT_ARROW)  &kp LA(DOWN_ARROW)  &kp LA(UP_ARROW)  &kp LA(RIGHT_ARROW)  &trans  &trans
&trans     &trans         &trans  &trans  &trans  &trans  &trans     &kp BACKSPACE  &kp DELETE      &trans  &trans  &trans  &kp LEFT_ARROW      &kp DOWN_ARROW      &kp UP_ARROW      &kp RIGHT_ARROW      &trans  &trans
&trans     &trans         &trans  &trans  &trans  &trans                            &kp HOME        &trans                  &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(UP_ARROW)  &kp LG(RIGHT_ARROW)  &trans  &trans
&kp PG_UP  &kp PAGE_DOWN  &trans  &trans  &trans          &kp SPACE  &kp ENTER      &kp END         &trans  &trans  &trans                      &trans              &trans            &trans               &trans  &trans
            >;
        };
    };
};
