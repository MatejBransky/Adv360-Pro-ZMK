/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define HYPER LS(LC(LA(LGUI)))
#define MEH LS(LC(LALT))

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
        &kp F1           &kp F2     &kp F3    &kp F4    &kp F5  &kp F6                &tog 1                                                                               &mo 2  &kp F7    &kp F8     &kp F9    &kp F10         &kp F11       &kp F12
       &kp TAB            &kp Q      &kp W     &kp E     &kp R   &kp T      &kp LS(LC(LALT))                                                                    &kp RS(RC(RALT))   &kp Y     &kp U      &kp I      &kp O           &kp P      &kp BSLH
     &lt 4 ESC            &kp A      &kp S     &kp D     &kp F   &kp G  &kp LS(LA(LC(LGUI)))  &kp CAPSLOCK  &kp ENTER  &none  &none  &kp SPACE  &kp DELETE  &kp RS(RC(RA(RGUI)))   &kp H     &kp J      &kp K      &kp L        &kp SEMI    &lt 4 APOS
     &kp LSHFT            &kp Z      &kp X     &kp C     &kp V   &kp B                 &none         &none   &kp HOME  &none  &none  &kp PG_UP       &none                 &none   &kp N     &kp M  &kp COMMA    &kp DOT        &kp FSLH     &kp RSHFT
&kp LEFT_ARROW  &kp RIGHT_ARROW  &kp LCTRL  &kp LALT  &kp LGUI                   &lt 3 SPACE      &kp BSPC    &kp END                &kp PG_DN   &kp ENTER           &lt 3 SPACE          &kp RGUI   &kp RALT  &kp RCTRL  &kp DOWN_ARROW  &kp UP_ARROW
            >;
        };

        layer_keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                &trans     &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                 &none     &trans   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &none  &none  &trans  &trans   &none     &trans   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none   &none  &trans  &none  &none  &trans   &none   &none  &kp KP_N0   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                &trans  &trans  &trans                 &trans        &trans     &kp KP_DOT           &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none                                                                           &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none         &none         &none         &none         &none         &none             &bootloader                                                                      &bootloader         &none         &none         &none         &none         &none  &none
&none         &none         &none         &none         &none         &none  &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none  &none  &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none  &none
&none         &none         &none         &none         &none         &none                   &none       &none  &none  &none  &none       &none       &none                   &none         &none         &none         &none         &none         &none  &none
&none         &none         &none    &bl BL_INC    &bl BL_DEC                       &rgb_ug RGB_TOG  &bl BL_TOG  &none                     &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none  &none
            >;
        };

        layer_symbols {
            bindings = <
   &trans     &trans     &trans     &trans      &trans       &trans  &trans                                                  &trans     &trans     &trans     &trans     &trans     &trans     &trans
   &trans  &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_N4    &kp KP_N5  &trans                                                  &trans  &kp KP_N6  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_N0     &trans
&kp EQUAL   &kp EXCL     &kp AT   &kp HASH  &kp DOLLAR  &kp PERCENT  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp CARET   &kp AMPS  &kp ASTRK   &kp LPAR   &kp RPAR  &kp MINUS
   &trans  &kp GRAVE     &trans     &trans      &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &kp LBKT   &kp RBKT     &trans     &trans     &trans     &trans
   &trans     &trans     &trans     &trans      &trans               &trans  &trans  &trans                  &trans  &trans  &trans                &trans     &trans     &trans     &trans     &trans
            >;
        };

        layer_misc {
            bindings = <
&trans  &trans      &trans            &trans        &trans  &trans  &trans                                                  &trans          &trans          &trans        &trans           &trans  &trans  &trans
&trans  &trans      &trans            &trans        &trans  &trans  &trans                                                  &trans          &trans       &kp PG_DN     &kp PG_UP           &trans  &trans  &trans
&trans  &trans  &kp C_PREV  &kp C_PLAY_PAUSE    &kp C_NEXT  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans      &trans      &kp C_VOL_DN  &kp C_VOL_UP  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans         &kp END      &kp HOME           &trans  &trans  &trans
&trans  &trans      &trans            &trans        &trans          &trans  &trans  &trans                  &trans  &trans  &trans                          &trans        &trans           &trans  &trans  &trans
            >;
        };
    };
};
